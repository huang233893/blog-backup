"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Client = void 0;
/* eslint-disable @typescript-eslint/no-unused-vars */
/*
 * Copyright (c) 2018 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
const abstract_client_1 = require("../../../common/abstract_client");
/**
 * wedata client
 * @class
 */
class Client extends abstract_client_1.AbstractClient {
    constructor(clientConfig) {
        super("wedata.tencentcloudapi.com", "2025-08-06", clientConfig);
    }
    /**
     * 创建资源文件文件夹
     */
    async CreateResourceFolder(req, cb) {
        return this.request("CreateResourceFolder", req, cb);
    }
    /**
     * 创建任务接口
     */
    async CreateTask(req, cb) {
        return this.request("CreateTask", req, cb);
    }
    /**
     * 根据项目ID获取项目下工作流
     */
    async ListOpsWorkflows(req, cb) {
        return this.request("ListOpsWorkflows", req, cb);
    }
    /**
     * 创建数据探索脚本文件夹
     */
    async CreateSQLFolder(req, cb) {
        return this.request("CreateSQLFolder", req, cb);
    }
    /**
     * 重命名代码文件夹
     */
    async UpdateCodeFolder(req, cb) {
        return this.request("UpdateCodeFolder", req, cb);
    }
    /**
     * 获取告警信息列表
     */
    async ListAlarmMessages(req, cb) {
        return this.request("ListAlarmMessages", req, cb);
    }
    /**
     * 获取工作流信息
     */
    async GetWorkflow(req, cb) {
        return this.request("GetWorkflow", req, cb);
    }
    /**
     * 获取实例直接上游
     */
    async ListDownstreamTaskInstances(req, cb) {
        return this.request("ListDownstreamTaskInstances", req, cb);
    }
    /**
     * 更新工作流（包括工作流基本信息与工作流参数）
     */
    async UpdateWorkflow(req, cb) {
        return this.request("UpdateWorkflow", req, cb);
    }
    /**
     * 获取任务直接上游
     */
    async ListUpstreamTasks(req, cb) {
        return this.request("ListUpstreamTasks", req, cb);
    }
    /**
     * 拉取任务版本列表
     */
    async GetTaskVersion(req, cb) {
        return this.request("GetTaskVersion", req, cb);
    }
    /**
     * 创建数据补录计划
     */
    async CreateDataBackfillPlan(req, cb) {
        return this.request("CreateDataBackfillPlan", req, cb);
    }
    /**
     * 查询数据探索文件夹树，包括文件夹下的脚本
     */
    async ListSQLFolderContents(req, cb) {
        return this.request("ListSQLFolderContents", req, cb);
    }
    /**
     * 运行SQL脚本
     */
    async RunSQLScript(req, cb) {
        return this.request("RunSQLScript", req, cb);
    }
    /**
     * 新建代码文件夹
     */
    async CreateCodeFolder(req, cb) {
        return this.request("CreateCodeFolder", req, cb);
    }
    /**
     * 获取任务直接上游
     */
    async ListUpstreamOpsTasks(req, cb) {
        return this.request("ListUpstreamOpsTasks", req, cb);
    }
    /**
     * 新增SQL脚本
     */
    async CreateSQLScript(req, cb) {
        return this.request("CreateSQLScript", req, cb);
    }
    /**
     * 异步批量暂停任务
     */
    async PauseOpsTasksAsync(req, cb) {
        return this.request("PauseOpsTasksAsync", req, cb);
    }
    /**
     * 查询运维中心异步操作详情
     */
    async GetOpsAsyncJob(req, cb) {
        return this.request("GetOpsAsyncJob", req, cb);
    }
    /**
     * 更新代码文件
     */
    async UpdateCodeFile(req, cb) {
        return this.request("UpdateCodeFile", req, cb);
    }
    /**
     * 修改任务负责人
     */
    async UpdateOpsTasksOwner(req, cb) {
        return this.request("UpdateOpsTasksOwner", req, cb);
    }
    /**
     * 删除告警规则
     */
    async DeleteOpsAlarmRule(req, cb) {
        return this.request("DeleteOpsAlarmRule", req, cb);
    }
    /**
     * 查询告警信息详情
     */
    async GetAlarmMessage(req, cb) {
        return this.request("GetAlarmMessage", req, cb);
    }
    /**
     * 获取任务直接下游详情
     */
    async ListDownstreamOpsTasks(req, cb) {
        return this.request("ListDownstreamOpsTasks", req, cb);
    }
    /**
     * 任务保存版本列表
     */
    async ListTaskVersions(req, cb) {
        return this.request("ListTaskVersions", req, cb);
    }
    /**
     * 实例批量重跑-异步
     */
    async RerunTaskInstancesAsync(req, cb) {
        return this.request("RerunTaskInstancesAsync", req, cb);
    }
    /**
     * 异步批量下线任务
     */
    async StopOpsTasksAsync(req, cb) {
        return this.request("StopOpsTasksAsync", req, cb);
    }
    /**
     * 删除代码文件
     */
    async DeleteCodeFile(req, cb) {
        return this.request("DeleteCodeFile", req, cb);
    }
    /**
     * 删除编排空间任务
     */
    async DeleteTask(req, cb) {
        return this.request("DeleteTask", req, cb);
    }
    /**
     * 查询脚本详情
     */
    async GetSQLScript(req, cb) {
        return this.request("GetSQLScript", req, cb);
    }
    /**
     * 获取任务代码
     */
    async GetTaskCode(req, cb) {
        return this.request("GetTaskCode", req, cb);
    }
    /**
     * 获取文件夹内容
     */
    async ListCodeFolderContents(req, cb) {
        return this.request("ListCodeFolderContents", req, cb);
    }
    /**
     * 创建资源文件
     */
    async CreateResourceFile(req, cb) {
        return this.request("CreateResourceFile", req, cb);
    }
    /**
     * 重命名SQL文件夹
     */
    async UpdateSQLFolder(req, cb) {
        return this.request("UpdateSQLFolder", req, cb);
    }
    /**
     * 查询SQL运行记录
     */
    async ListSQLScriptRuns(req, cb) {
        return this.request("ListSQLScriptRuns", req, cb);
    }
    /**
     * 修改告警规则
     */
    async UpdateOpsAlarmRule(req, cb) {
        return this.request("UpdateOpsAlarmRule", req, cb);
    }
    /**
     * 查询告警规则列表
     */
    async ListOpsAlarmRules(req, cb) {
        return this.request("ListOpsAlarmRules", req, cb);
    }
    /**
     * 根据告警规则id/名称查询单个告警规则信息
     */
    async GetOpsAlarmRule(req, cb) {
        return this.request("GetOpsAlarmRule", req, cb);
    }
    /**
     * 查询资源文件文件夹列表
     */
    async ListResourceFolders(req, cb) {
        return this.request("ListResourceFolders", req, cb);
    }
    /**
     * 查询工作流列表
     */
    async ListWorkflows(req, cb) {
        return this.request("ListWorkflows", req, cb);
    }
    /**
     * 获取任务详情
     */
    async GetOpsTask(req, cb) {
        return this.request("GetOpsTask", req, cb);
    }
    /**
     * 实例批量置成功-异步
     */
    async SetSuccessTaskInstancesAsync(req, cb) {
        return this.request("SetSuccessTaskInstancesAsync", req, cb);
    }
    /**
     * 更新资源文件
     */
    async UpdateResourceFile(req, cb) {
        return this.request("UpdateResourceFile", req, cb);
    }
    /**
     * 获取实例列表
     */
    async ListTaskInstances(req, cb) {
        return this.request("ListTaskInstances", req, cb);
    }
    /**
     * 根据工作流id，获取工作流调度详情。
     */
    async GetOpsWorkflow(req, cb) {
        return this.request("GetOpsWorkflow", req, cb);
    }
    /**
     * 获取任务代码
     */
    async GetOpsTaskCode(req, cb) {
        return this.request("GetOpsTaskCode", req, cb);
    }
    /**
     * 设置告警规则
     */
    async CreateOpsAlarmRule(req, cb) {
        return this.request("CreateOpsAlarmRule", req, cb);
    }
    /**
     * 获取单次补录的所有实例详情
     */
    async ListDataBackfillInstances(req, cb) {
        return this.request("ListDataBackfillInstances", req, cb);
    }
    /**
     * 获取实例直接上游
     */
    async ListUpstreamTaskInstances(req, cb) {
        return this.request("ListUpstreamTaskInstances", req, cb);
    }
    /**
     * 查询文件夹列表
     */
    async ListWorkflowFolders(req, cb) {
        return this.request("ListWorkflowFolders", req, cb);
    }
    /**
     * 资源管理-删除资源文件
     */
    async DeleteResourceFile(req, cb) {
        return this.request("DeleteResourceFile", req, cb);
    }
    /**
     * 新建代码文件
     */
    async CreateCodeFile(req, cb) {
        return this.request("CreateCodeFile", req, cb);
    }
    /**
     * 创建任务接口
     */
    async GetTask(req, cb) {
        return this.request("GetTask", req, cb);
    }
    /**
     * 提交任务。
     */
    async SubmitTask(req, cb) {
        return this.request("SubmitTask", req, cb);
    }
    /**
     * 获取实例列表
     */
    async GetTaskInstanceLog(req, cb) {
        return this.request("GetTaskInstanceLog", req, cb);
    }
    /**
     * 获取资源文件列表
     */
    async ListResourceFiles(req, cb) {
        return this.request("ListResourceFiles", req, cb);
    }
    /**
     * 创建任务接口
     */
    async UpdateTask(req, cb) {
        return this.request("UpdateTask", req, cb);
    }
    /**
     * 删除工作流
     */
    async DeleteWorkflow(req, cb) {
        return this.request("DeleteWorkflow", req, cb);
    }
    /**
     * 获取资源文件详情
     */
    async GetResourceFile(req, cb) {
        return this.request("GetResourceFile", req, cb);
    }
    /**
     * 数据探索删除文件夹
     */
    async DeleteCodeFolder(req, cb) {
        return this.request("DeleteCodeFolder", req, cb);
    }
    /**
     * 删除资源文件文件夹
     */
    async DeleteResourceFolder(req, cb) {
        return this.request("DeleteResourceFolder", req, cb);
    }
    /**
     * 创建工作流
     */
    async CreateWorkflow(req, cb) {
        return this.request("CreateWorkflow", req, cb);
    }
    /**
     * 实例批量终止操作-异步操作
     */
    async KillTaskInstancesAsync(req, cb) {
        return this.request("KillTaskInstancesAsync", req, cb);
    }
    /**
     * 删除数据开发文件夹
     */
    async DeleteWorkflowFolder(req, cb) {
        return this.request("DeleteWorkflowFolder", req, cb);
    }
    /**
     * 查询任务分页信息
     */
    async ListTasks(req, cb) {
        return this.request("ListTasks", req, cb);
    }
    /**
     * 调度实例详情
     */
    async ListTaskInstanceExecutions(req, cb) {
        return this.request("ListTaskInstanceExecutions", req, cb);
    }
    /**
     * 查看代码文件详情
     */
    async GetCodeFile(req, cb) {
        return this.request("GetCodeFile", req, cb);
    }
    /**
     * 创建文件夹
     */
    async CreateWorkflowFolder(req, cb) {
        return this.request("CreateWorkflowFolder", req, cb);
    }
    /**
     * 删除SQL文件夹
     */
    async DeleteSQLFolder(req, cb) {
        return this.request("DeleteSQLFolder", req, cb);
    }
    /**
     * 删除探索脚本
     */
    async DeleteSQLScript(req, cb) {
        return this.request("DeleteSQLScript", req, cb);
    }
    /**
     * 创建文件夹
     */
    async UpdateWorkflowFolder(req, cb) {
        return this.request("UpdateWorkflowFolder", req, cb);
    }
    /**
     * 根据项目id获取任务列表
     */
    async ListOpsTasks(req, cb) {
        return this.request("ListOpsTasks", req, cb);
    }
    /**
     * 停止运行SQL脚本
     */
    async StopSQLScriptRun(req, cb) {
        return this.request("StopSQLScriptRun", req, cb);
    }
    /**
     * 获取任务直接下游详情
     */
    async ListDownstreamTasks(req, cb) {
        return this.request("ListDownstreamTasks", req, cb);
    }
    /**
     * 创建资源文件文件夹
     */
    async UpdateResourceFolder(req, cb) {
        return this.request("UpdateResourceFolder", req, cb);
    }
    /**
     * 保存探索脚本内容
     */
    async UpdateSQLScript(req, cb) {
        return this.request("UpdateSQLScript", req, cb);
    }
    /**
     * 调度实例详情
     */
    async GetTaskInstance(req, cb) {
        return this.request("GetTaskInstance", req, cb);
    }
}
exports.Client = Client;
